# -*- coding: utf-8 -*-
"""08.03.2024-11.03.2024.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VS2PVSC9OmCmHnZRVXRYm9ngsHvr5Es5
"""

def calculadora():
  exibir_menu()
  opcao = input("Digite o numero da operação:")

  if (opcao == "1"):
    a = int(input("Insira o valor A:"))
    b = int(input("Insira o valor B:"))
    soma(a,b)

  elif(opcao == "2"):
    a = int(input("Insira o valor A:"))
    b = int(input("Insira o valor B:"))
    subtracao(a,b
              )
  elif(opcao == "3"):
    a = int(input("Insira o valor A:"))
    b = int(input("Insira o valor B:"))
    multiplicacao(a,b)

  elif(opcao == "4"):
    a = int(input("Insira o valor A:"))
    b = int(input("Insira o valor B:"))
    divisao(a,b)

  elif(opcao == "5"):
    a = int(input("Insira o valor A:"))
    b = int(input("Insira o valor B:"))
    potenciacao(a,b)

  elif(opcao == "6"):
    print("Obrigado!")
  else:
    print("Opção inválida.")
    calculadora()

def exibir_menu():
  print("Escolha uma opção:")
  print("1 - Soma")
  print("2 - Subtração")
  print("3 - Multiplicação")
  print("4 - Divisão")
  print("5 - Potenciação")
  print("6 - Sair")

def soma(a,b):
  resultado = a + b
  print(f"Resultado: {resultado}")

def subtracao(a,b):
  resultado = a - b
  print(f"Resultado: {resultado}")

def multiplicacao(a,b):
  resultado = a * b
  print(f"Resultado: {resultado}")
def divisao(a,b):
  resultado = a / b
  print(f"Resultado: {resultado}")
def potenciacao(a,b):
  resultado = a ** b
  print(f"Resultado: {resultado}")

calculadora()

def main():
  cpf = input("Digite seu CPF (Apenas números): ")
  if validar_cpf(cpf):
    print("CPF é válido.")
  else:
    print("CPF é inválido.")

def validar_cpf(cpf):
  cpf_limpo = [int(d) for d in cpf if d.isdigit()]

  verificador_1 = validar_digito_1(cpf_limpo)
  if verificador_1 == False:
    return False

  verificador_2 =validar_digito_2(cpf_limpo)
  if verificador_2 == True:
    return True
  else:
    return False

def validar_digito_1(cpf):
  soma = 0
  for n in range(9):
    soma += (cpf[n] * (10 - n))
  v1 = ((soma * 10) % 11) % 10
  print(v1 == cpf[-2])
  return v1 == cpf[-2]

def validar_digito_2(cpf):
  soma = 0
  for n in range(10):
    soma += (cpf[n] * (11 - n))
  v1 = ((soma * 10) % 11) % 10
  print(v1 == cpf[-1])
  return v1 == cpf[-1]

main()

def main():
  cpf = input("Digite o CPF (Apenas os 9 digitos): ")
  cpf_limpo = [int(d) for d in cpf if d.isdigit()]
  d1 = gerador_digito_1(cpf_limpo)
  cpf_limpo.append(d1)
  d2 = gerador_digito_2(cpf_limpo)
  cpf_limpo.append(d2)

  print(f"O número de CPF será {str(cpf_limpo)}")


def gerador_digito_1(cpf):
  soma = 0
  for n in range(9):
    soma += (cpf[n] * (10 - n))
  n1 = ((soma * 10) % 11) % 10
  return n1

def gerador_digito_2(cpf):
  soma = 0
  for n in range(10):
    soma += (cpf[n] * (11 - n))
  n2 = ((soma * 10) % 11) % 10
  return n2

main()